
individual colors for debugging 
av density & pressure over time to show - for each frame 
png for gener video seq  - or live
 
neigb search kernel = 2h + count particles on  borders or not  - contribution 0 in any case 2.1 or 1.9h
! rotate and transle the grid and compute neighbors again
 just quadratic search - n squared
 data struct to store neighbors
 try hashing to store particles
 how to distinguish fluid and boundary neighbors
 show tests - use dif colors for neighbors or print their number
 
 - next step, then kernel 
 use quibuc spline for kernel
 tests only work for inner particles - not edegs - test particles with full neighbors
 1.01/h ; kernel correction 1/alpha computed from init state of grid
 
 next step - boundary of 2-3 layers
 visualize 1 particle falling down on the boundary  -here implement sph accelerations
 pressure a overcomes gravity on boundaries
 try to use different time steps, stiffness const and viscosity value
 on boundary particle can either stay or bounce - both fine
 bounce no more far than init state, bot x component for this case
 
 test - play with parametres
 
 boundary box & partciles 10x10 - next step
 after implement analysis - av density over time - goes to final report
 rotate the box & repeat the simulation
 implement 2d fluid container
 
 in report:
 concepts: sph
 implementation details: neighbor search, visualiz methods, tests
 analysis: check param time steps, stiffness, average density, viscosity, their dependence on each other, 
           show adv over grid fluids: box rotation, performance mesurements
 
 write everything in document - paste pictures on each stage

 work with init distance 0.8 or 1.2 and density 900 or 0.9 (depends on metrix) - 
 don't work with specific numbers as 1

 kernel and kernel gradient 
 test: sum of kernel 1/h, 0 and 3d look on slides (sum(xi - xj) * kernel gradient)) = -1/h * I)

 bouncing by viscosity
 average density over time
 global av density error - gives volume deviation
 color particles 
 visulaize velocities by colors
 if particle goes through the boundary - pressure acceleration is too small (i.e. increase stiffness)
 try to put particle off-center - should bounce along x axis
 check parametres limits
 try to init velocity for falling 
 density is always small, untill reaching the boundary - then increases
 same mass and rest density for all particles
 don't update density for boundary particles, work with rest density - only for fluid use update
 work with mass and density for each particle - not with volume
 don't calculate pressure and density for boundary particles
 use pressure mirroring for boundary particles (look slides)
 ! no computations for boundary particles 
 try 10x10 particles in a box
 try to reduce viscosity as much as possible

 for final simulation: place fluid in the corner of a box
 fluid should splash and form waves
 try to limit width of the box
 then try to rotate the box & add boundaries in the middle of the box
 5x10 particle in a box or 10x5
 for report - plot quantities over time
 the snaller the stiffness - the bigger the time step
 dear imgui - for visualization

 av density over time - curve depends on dt and stiffness
 k - bigger curve closer to rest density 
 show relative density
 av density over time from stiffness
 increase k - > decrease dt (otherwise stability problems)
 max timestep for different stiffness 

 report structure:
 1. introduction (what and why : motivation; challenges: incomressibility analysis; explain all components of report - the task (the goal o this 
 report/project); summary of the following chapters: in chapter 1 we discuss...)
 2. concepts (theory navier stokes + sph + sim steps)
 3. implementation details
 4. analysis
 5.conclusion (summary of the report, what was done, what was not done, what can be improved, what was learned)
 in this chapter the goal is.. in section 1 we discuss.. in section 2 we present.. in section 3 we show.. in section 4 we conclude..
 short summary of the chapter in the ends
 eq 17 - navier stokes (SPHFluidsinComputerGraphics 2014)
 for performance analysis (100/1000 particles - increase in computation time) - for more complicated simulation (add boundaries, more particles) 
 neighbor search
 references for 3d party implementations (both code and report)